# SwiftPayMe Nginx Reverse Proxy Configuration
# This configuration file sets up Nginx as a reverse proxy for the SwiftPayMe platform.

# Main HTTP context
http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main \'$remote_addr - $remote_user [$time_local] "$request" \'
                    \'$status $body_bytes_sent "$http_referer" \'
                    \'"$http_user_agent" "$http_x_forwarded_for"\';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Upstream servers
    upstream web_ui {
        server web-ui:3000;
    }

    upstream admin_ui {
        server admin-ui:3001;
    }

    upstream api_gateway {
        server api-gateway:8080;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name swiftpayme.com www.swiftpayme.com app.swiftpayme.com admin.swiftpayme.com api.swiftpayme.com;
        return 301 https://$server_name$request_uri;
    }

    # Main website (swiftpayme.com)
    server {
        listen 443 ssl http2;
        server_name swiftpayme.com www.swiftpayme.com;

        ssl_certificate /etc/letsencrypt/live/swiftpayme.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/swiftpayme.com/privkey.pem;

        root /var/www/html;
        index index.html index.htm;

        location / {
            try_files $uri $uri/ =404;
        }

        # Static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Web UI (app.swiftpayme.com)
    server {
        listen 443 ssl http2;
        server_name app.swiftpayme.com;

        ssl_certificate /etc/letsencrypt/live/swiftpayme.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/swiftpayme.com/privkey.pem;

        location / {
            proxy_pass http://web_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # WebSocket support
        location /ws {
            proxy_pass http://web_ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://web_ui;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Admin UI (admin.swiftpayme.com)
    server {
        listen 443 ssl http2;
        server_name admin.swiftpayme.com;

        ssl_certificate /etc/letsencrypt/live/swiftpayme.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/swiftpayme.com/privkey.pem;

        location / {
            proxy_pass http://admin_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # Static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://admin_ui;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API Gateway (api.swiftpayme.com)
    server {
        listen 443 ssl http2;
        server_name api.swiftpayme.com;

        ssl_certificate /etc/letsencrypt/live/swiftpayme.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/swiftpayme.com/privkey.pem;

        # Rate limiting for API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # Rate limiting for login endpoints
        location /api/auth/login {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # WebSocket support for API
        location /ws {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://api_gateway;
            access_log off;
        }
    }
}

# Events context
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}
