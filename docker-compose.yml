version: '3.8'

services:
  # API Gateway - Unified entry point
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGINS=*
      # Service URLs
      - USER_SERVICE_URL=http://user-service:3002
      - ASSET_SERVICE_URL=http://asset-service:3003
      - CURRENCY_SERVICE_URL=http://currency-conversion-service:3004
      - CRYPTO_SERVICE_URL=http://crypto-service:3005
      - PAYMENT_SERVICE_URL=http://payment-service:3006
      - ADMIN_SERVICE_URL=http://admin-service:3007
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
    depends_on:
      - redis
      - user-service
      - asset-service
      - currency-conversion-service
      - crypto-service
      - payment-service
      - admin-service
      - notification-service
    networks:
      - swiftpay-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # User Service - User management, authentication, KYC
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_users?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-this-in-production}
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - BCRYPT_ROUNDS=12
      - MAX_LOGIN_ATTEMPTS=5
      - LOCK_TIME=30
      - FILE_UPLOAD_MAX_SIZE=10485760
      - ALLOWED_FILE_TYPES=image/jpeg,image/png,application/pdf
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY:-your-32-byte-encryption-key-change-this}
    depends_on:
      - mongodb
      - redis
    networks:
      - swiftpay-network
    volumes:
      - user-service-logs:/app/logs
      - user-service-uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Asset Service - Physical asset deposits, verification, valuation
  asset-service:
    build:
      context: ./services/asset-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_assets?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - CURRENCY_SERVICE_URL=http://currency-conversion-service:3004
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
      - USER_SERVICE_URL=http://user-service:3002
      # Asset pricing APIs
      - GOLD_API_KEY=${GOLD_API_KEY:-your-gold-api-key}
      - SILVER_API_KEY=${SILVER_API_KEY:-your-silver-api-key}
      - DIAMOND_API_KEY=${DIAMOND_API_KEY:-your-diamond-api-key}
      - METALS_API_KEY=${METALS_API_KEY:-your-metals-api-key}
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY:-your-32-byte-encryption-key-change-this}
    depends_on:
      - mongodb
      - redis
    networks:
      - swiftpay-network
    volumes:
      - asset-service-logs:/app/logs
      - asset-service-images:/app/uploads/images
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Currency Conversion Service - Real-time pricing and currency conversion
  currency-conversion-service:
    build:
      context: ./services/currency-conversion-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_currency?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      # Currency API keys
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY:-your-exchange-rate-api-key}
      - FIXER_API_KEY=${FIXER_API_KEY:-your-fixer-api-key}
      - CURRENCYLAYER_API_KEY=${CURRENCYLAYER_API_KEY:-your-currencylayer-api-key}
      - COINBASE_API_KEY=${COINBASE_API_KEY:-your-coinbase-api-key}
      - COINBASE_API_SECRET=${COINBASE_API_SECRET:-your-coinbase-api-secret}
      - METALS_API_KEY=${METALS_API_KEY:-your-metals-api-key}
      - CACHE_TTL=300
      - RATE_UPDATE_INTERVAL=60000
    depends_on:
      - mongodb
      - redis
    networks:
      - swiftpay-network
    volumes:
      - currency-service-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Crypto Service - Bitcoin wallets, transactions, blockchain integration
  crypto-service:
    build:
      context: ./services/crypto-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_crypto?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      # Bitcoin configuration
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-testnet}
      - BITCOIN_RPC_HOST=${BITCOIN_RPC_HOST:-bitcoin-node}
      - BITCOIN_RPC_PORT=${BITCOIN_RPC_PORT:-18332}
      - BITCOIN_RPC_USER=${BITCOIN_RPC_USER:-bitcoin}
      - BITCOIN_RPC_PASSWORD=${BITCOIN_RPC_PASSWORD:-password}
      - BITCOIN_WALLET_NAME=${BITCOIN_WALLET_NAME:-swiftpayme_wallet}
      - MIN_CONFIRMATIONS=3
      - TRANSACTION_FEE_RATE=10
      # External Bitcoin APIs
      - BLOCKSTREAM_API_URL=https://blockstream.info/testnet/api
      - BLOCKCHAIN_INFO_API_URL=https://testnet.blockchain.info
      - USER_SERVICE_URL=http://user-service:3002
      - CURRENCY_SERVICE_URL=http://currency-conversion-service:3004
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY:-your-32-byte-encryption-key-change-this}
    depends_on:
      - mongodb
      - redis
      - bitcoin-node
    networks:
      - swiftpay-network
    volumes:
      - crypto-service-logs:/app/logs
      - crypto-service-wallets:/app/wallets
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Payment Service - Payment orchestration and transaction processing
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - PORT=3006
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_payments?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - USER_SERVICE_URL=http://user-service:3002
      - ASSET_SERVICE_URL=http://asset-service:3003
      - CURRENCY_SERVICE_URL=http://currency-conversion-service:3004
      - CRYPTO_SERVICE_URL=http://crypto-service:3005
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY:-your-32-byte-encryption-key-change-this}
    depends_on:
      - mongodb
      - redis
    networks:
      - swiftpay-network
    volumes:
      - payment-service-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin Service - Administrative interface and asset management
  admin-service:
    build:
      context: ./services/admin-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_admin?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET:-your-super-secret-admin-jwt-key-change-this-in-production}
      - USER_SERVICE_URL=http://user-service:3002
      - ASSET_SERVICE_URL=http://asset-service:3003
      - CURRENCY_SERVICE_URL=http://currency-conversion-service:3004
      - CRYPTO_SERVICE_URL=http://crypto-service:3005
      - PAYMENT_SERVICE_URL=http://payment-service:3006
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY:-your-32-byte-encryption-key-change-this}
    depends_on:
      - mongodb
      - redis
      - user-service
      - asset-service
      - currency-conversion-service
      - crypto-service
      - payment-service
      - notification-service
    networks:
      - swiftpay-network
    volumes:
      - admin-service-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Notification Service - Multi-channel notifications and alerts
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=production
      - PORT=3008
      - MONGODB_URI=mongodb://admin:${MONGODB_PASSWORD:-password}@mongodb:27017/swiftpay_notifications?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      # Email configuration
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-your-sendgrid-api-key}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL:-noreply@swiftpayme.com}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-your-email@gmail.com}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-your-email-password}
      # SMS configuration
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:-your-twilio-account-sid}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:-your-twilio-auth-token}
      - TWILIO_FROM_PHONE=${TWILIO_FROM_PHONE:-+1234567890}
      # Push notification configuration
      - FIREBASE_SERVER_KEY=${FIREBASE_SERVER_KEY:-your-firebase-server-key}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-your-firebase-project-id}
      # Slack configuration
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN:-your-slack-bot-token}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-your-slack-webhook-url}
      - USER_SERVICE_URL=http://user-service:3002
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY:-your-32-byte-encryption-key-change-this}
    depends_on:
      - mongodb
      - redis
    networks:
      - swiftpay-network
    volumes:
      - notification-service-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Infrastructure Services
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=swiftpay
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
      - ./docker/mongodb/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - swiftpay-network
    restart: unless-stopped
    command: mongod --auth --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - swiftpay-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Bitcoin Node (for development/testing)
  bitcoin-node:
    image: ruimarinho/bitcoin-core:23
    ports:
      - "18332:18332"
      - "18333:18333"
    environment:
      - BITCOIN_DATA=/bitcoin
    volumes:
      - bitcoin-data:/bitcoin
      - ./docker/bitcoin/bitcoin.conf:/bitcoin/bitcoin.conf:ro
    networks:
      - swiftpay-network
    restart: unless-stopped
    command: >
      bitcoind
      -testnet=1
      -server=1
      -rpcallowip=0.0.0.0/0
      -rpcbind=0.0.0.0:18332
      -rpcuser=${BITCOIN_RPC_USER:-bitcoin}
      -rpcpassword=${BITCOIN_RPC_PASSWORD:-password}
      -txindex=1
      -datadir=/bitcoin
    healthcheck:
      test: ["CMD", "bitcoin-cli", "-testnet", "-rpcuser=${BITCOIN_RPC_USER:-bitcoin}", "-rpcpassword=${BITCOIN_RPC_PASSWORD:-password}", "getblockchaininfo"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

  # Monitoring and Logging
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./docker/fluentd/conf:/fluentd/etc:ro
      - fluentd-logs:/var/log/fluentd
    networks:
      - swiftpay-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:24220/api/plugins.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  # Database volumes
  mongodb-data:
  mongodb-config:
  redis-data:
  bitcoin-data:

  # Service log volumes
  user-service-logs:
  asset-service-logs:
  currency-service-logs:
  crypto-service-logs:
  payment-service-logs:
  admin-service-logs:
  notification-service-logs:

  # Service data volumes
  user-service-uploads:
  asset-service-images:
  crypto-service-wallets:

  # Infrastructure volumes
  fluentd-logs:

networks:
  swiftpay-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

